#!/bin/bash

echo "üéØ Quotify - VERSI√ìN COMPLETA CON YT-DLP"
echo "========================================"

PACKAGE_NAME="Quotify-COMPLETO-YTDLP-$(date +%Y%m%d-%H%M)"
DIST_DIR="/Users/darwinborges/Desktop/$PACKAGE_NAME"

echo "üì¶ Creando versi√≥n COMPLETA con yt-dlp..."

# Limpiar y crear directorio
rm -rf "$DIST_DIR"
mkdir -p "$DIST_DIR"
mkdir -p "$DIST_DIR/QuotifyApp"
mkdir -p "$DIST_DIR/tools"

# Copiar proyecto
cp -r src "$DIST_DIR/QuotifyApp/"
cp -r public "$DIST_DIR/QuotifyApp/"
cp package.json "$DIST_DIR/QuotifyApp/"
cp package-lock.json "$DIST_DIR/QuotifyApp/"
cp vite.config.ts "$DIST_DIR/QuotifyApp/"
cp tsconfig.json "$DIST_DIR/QuotifyApp/"
cp tsconfig.node.json "$DIST_DIR/QuotifyApp/"
cp tailwind.config.js "$DIST_DIR/QuotifyApp/"
cp postcss.config.js "$DIST_DIR/QuotifyApp/"
cp index.html "$DIST_DIR/QuotifyApp/"

cd "$DIST_DIR"

# 0. INSTALADOR DE YT-DLP
cat > "0Ô∏è‚É£ INSTALAR-YT-DLP.command" << 'YTDLP_EOF'
#!/bin/bash

echo "üîß Instalador de yt-dlp para Quotify"
echo "===================================="
echo ""
echo "yt-dlp es necesario para descargar audio de YouTube"
echo ""

# Verificar si ya est√° instalado
if command -v yt-dlp &> /dev/null; then
    echo "‚úÖ yt-dlp ya est√° instalado!"
    echo "   Ubicaci√≥n: $(which yt-dlp)"
    echo "   Versi√≥n: $(yt-dlp --version)"
    echo ""
    echo "¬°Puedes continuar con la instalaci√≥n de Quotify!"
    echo ""
    read -p "Presiona Enter para salir..."
    exit 0
fi

echo "‚ùå yt-dlp NO est√° instalado"
echo ""
echo "üì• OPCIONES DE INSTALACI√ìN:"
echo ""
echo "1. AUTOM√ÅTICA (recomendada):"
echo "   Se descargar√° e instalar√° autom√°ticamente"
echo "   (Requiere contrase√±a de administrador)"
echo ""
echo "2. MANUAL:"
echo "   Ve a: https://github.com/yt-dlp/yt-dlp"
echo "   Descarga e instala manualmente"
echo ""
read -p "¬øInstalar autom√°ticamente? (s/n): " -n 1 -r
echo

if [[ $REPLY =~ ^[Ss]$ ]]; then
    echo ""
    echo "üì• Descargando yt-dlp..."
    curl -L "https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos" -o /tmp/yt-dlp
    
    echo "üîß Instalando (requiere contrase√±a)..."
    chmod +x /tmp/yt-dlp
    sudo mv /tmp/yt-dlp /usr/local/bin/yt-dlp
    
    if command -v yt-dlp &> /dev/null; then
        echo ""
        echo "‚úÖ ¬°yt-dlp instalado correctamente!"
        echo "   Versi√≥n: $(yt-dlp --version)"
    else
        echo "‚ùå Error en la instalaci√≥n"
    fi
fi

echo ""
read -p "Presiona Enter para continuar..."
YTDLP_EOF

chmod +x "0Ô∏è‚É£ INSTALAR-YT-DLP.command"

# 1. INSTALADOR QUOTIFY
cat > "1Ô∏è‚É£ INSTALAR-QUOTIFY.command" << 'INSTALL_EOF'
#!/bin/bash

echo "üéØ Quotify - Instalaci√≥n COMPLETA"
echo "================================="

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$DIR/QuotifyApp"

# RUTAS HARDCODED
NODE_PATH="/Users/darwinborges/.nvm/versions/node/v20.19.2/bin/node"
NPM_PATH="/Users/darwinborges/.nvm/versions/node/v20.19.2/bin/npm"

echo ""
echo "üìç Directorio: $(pwd)"
echo "‚úÖ Node.js: $($NODE_PATH --version)"
echo "‚úÖ npm: $($NPM_PATH --version)"

# Verificar yt-dlp
echo ""
echo "üîç Verificando yt-dlp..."
if command -v yt-dlp &> /dev/null; then
    echo "‚úÖ yt-dlp: $(yt-dlp --version)"
else
    echo "‚ùå yt-dlp NO est√° instalado"
    echo ""
    echo "‚ö†Ô∏è IMPORTANTE: yt-dlp es necesario para transcripciones"
    echo "   Ejecuta primero: '0Ô∏è‚É£ INSTALAR-YT-DLP.command'"
    echo ""
    read -p "¬øContinuar sin yt-dlp? (s/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Ss]$ ]]; then
        exit 1
    fi
fi

echo ""
echo "üì¶ Instalando dependencias..."
echo "   (Esto toma 3-8 minutos)"
echo ""
"$NPM_PATH" install

echo ""
echo "‚úÖ ¬°Instalaci√≥n completada!"
echo ""
echo "üöÄ SIGUIENTE PASO:"
echo "   Doble clic en 'üéØ Abrir Quotify.app'"
echo ""
read -p "Presiona Enter para continuar..."
INSTALL_EOF

chmod +x "1Ô∏è‚É£ INSTALAR-QUOTIFY.command"

# 2. APP BUNDLE MEJORADO
APP_DIR="$DIST_DIR/üéØ Abrir Quotify.app"
mkdir -p "$APP_DIR/Contents/MacOS"
mkdir -p "$APP_DIR/Contents/Resources"

# Copiar icono
if [ -f "/Users/darwinborges/Desktop/Icono Quotify.png" ]; then
    ICONSET_DIR="/tmp/quotify_ytdlp.iconset"
    mkdir -p "$ICONSET_DIR"
    
    sips -z 1024 1024 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_1024x1024.png" 2>/dev/null
    sips -z 512 512 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_512x512.png" 2>/dev/null
    sips -z 256 256 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_256x256.png" 2>/dev/null
    sips -z 128 128 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_128x128.png" 2>/dev/null
    
    iconutil -c icns "$ICONSET_DIR" -o "$APP_DIR/Contents/Resources/quotify.icns" 2>/dev/null
    rm -rf "$ICONSET_DIR"
fi

# Info.plist
cat > "$APP_DIR/Contents/Info.plist" << 'PLIST_EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundleExecutable</key>
    <string>quotify_launcher</string>
    <key>CFBundleIdentifier</key>
    <string>com.quotify.ytdlp</string>
    <key>CFBundleName</key>
    <string>Quotify</string>
    <key>CFBundleDisplayName</key>
    <string>üéØ Abrir Quotify</string>
    <key>CFBundleVersion</key>
    <string>1.0</string>
    <key>CFBundleIconFile</key>
    <string>quotify</string>
    <key>LSUIElement</key>
    <true/>
    <key>NSHighResolutionCapable</key>
    <true/>
</dict>
</plist>
PLIST_EOF

# LAUNCHER CON PATH COMPLETO
cat > "$APP_DIR/Contents/MacOS/quotify_launcher" << 'LAUNCHER_EOF'
#!/bin/bash

# Directorio de la app
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
QUOTIFY_DIR="$DIR/../../../QuotifyApp"

# RUTAS HARDCODED + yt-dlp paths
export PATH="/Users/darwinborges/.nvm/versions/node/v20.19.2/bin:/usr/local/bin:/opt/homebrew/bin:/usr/bin:/bin"
NODE_PATH="/Users/darwinborges/.nvm/versions/node/v20.19.2/bin/node"
NPM_PATH="/Users/darwinborges/.nvm/versions/node/v20.19.2/bin/npm"

# Funci√≥n para di√°logos
show_dialog() {
    osascript -e "tell application \"System Events\" to display dialog \"$1\" buttons {\"$2\"} default button \"$2\" with icon note"
}

show_choice() {
    result=$(osascript -e "tell application \"System Events\" to display dialog \"$1\" buttons {\"Cancelar\", \"$2\"} default button \"$2\" with icon note" 2>&1)
    if [[ $result == *"$2"* ]]; then
        return 0
    else
        return 1
    fi
}

# Preguntar si abrir
if ! show_choice "üéØ Quotify - Versi√≥n Completa

‚úÖ Todas las funciones activas
‚úÖ Transcripci√≥n con yt-dlp + OpenAI
‚úÖ Sin terminal visible
üîá Ejecuci√≥n invisible

¬øIniciar Quotify?" "üöÄ Abrir Quotify"; then
    exit 0
fi

# Verificar instalaci√≥n
if [ ! -d "$QUOTIFY_DIR/node_modules" ]; then
    show_dialog "‚ùå Quotify no est√° instalado

Por favor ejecuta primero:
'1Ô∏è‚É£ INSTALAR-QUOTIFY.command'" "Entendido"
    exit 1
fi

# Cambiar al directorio
cd "$QUOTIFY_DIR"

# Cerrar procesos anteriores
pkill -f "electron.*quotify" 2>/dev/null || true
pkill -f "vite.*5173" 2>/dev/null || true
sleep 2

# Mostrar progreso
show_dialog "üöÄ Iniciando Quotify...

‚ö° Preparando aplicaci√≥n
‚è±Ô∏è Toma 15-20 segundos
üîá Sin terminal visible

¬°No cierres este mensaje!" "Entendido" &

# LOG SILENCIOSO
LOG_FILE="/tmp/quotify_ytdlp_$(date +%s).log"

# EJECUTAR INVISIBLE
{
    echo "=== Quotify Complete Log $(date) ==="
    echo "PWD: $(pwd)"
    echo "Node: $NODE_PATH"
    echo "npm: $NPM_PATH"
    echo "PATH: $PATH"
    echo "yt-dlp: $(which yt-dlp || echo 'not found')"
    echo ""
    
    # Ejecutar npm run dev
    "$NPM_PATH" run dev
} > "$LOG_FILE" 2>&1 &

# Esperar que arranque
sleep 20

# Verificar si funciona
if pgrep -f "electron.*quotify" >/dev/null; then
    show_dialog "‚úÖ ¬°Quotify funcionando!

üì± Aplicaci√≥n abierta
üéµ Transcripci√≥n lista
üîá Sin terminal visible

Si no ves la ventana:
‚Ä¢ Revisa el Dock
‚Ä¢ Usa Mission Control (F3)" "¬°Perfecto!"
else
    show_dialog "‚ö†Ô∏è Quotify tard√≥ en abrir

Intenta otra vez o revisa:
Log: $LOG_FILE" "Entendido"
fi

LAUNCHER_EOF

chmod +x "$APP_DIR/Contents/MacOS/quotify_launcher"

# 3. VERIFICADOR DE SISTEMA
cat > "3Ô∏è‚É£ VERIFICAR-SISTEMA.command" << 'CHECK_EOF'
#!/bin/bash

echo "üîç Verificaci√≥n de Sistema para Quotify"
echo "======================================"
echo ""

# Node.js
echo "üìã Node.js:"
if [ -x "/Users/darwinborges/.nvm/versions/node/v20.19.2/bin/node" ]; then
    echo "‚úÖ Instalado: $(/Users/darwinborges/.nvm/versions/node/v20.19.2/bin/node --version)"
else
    echo "‚ùå NO encontrado en NVM"
fi

# npm
echo ""
echo "üìã npm:"
if [ -x "/Users/darwinborges/.nvm/versions/node/v20.19.2/bin/npm" ]; then
    echo "‚úÖ Instalado: $(/Users/darwinborges/.nvm/versions/node/v20.19.2/bin/npm --version)"
else
    echo "‚ùå NO encontrado"
fi

# yt-dlp
echo ""
echo "üìã yt-dlp:"
if command -v yt-dlp &> /dev/null; then
    echo "‚úÖ Instalado: $(yt-dlp --version)"
    echo "   Ubicaci√≥n: $(which yt-dlp)"
else
    echo "‚ùå NO instalado - necesario para transcripciones"
    echo "   Ejecuta: '0Ô∏è‚É£ INSTALAR-YT-DLP.command'"
fi

# Quotify
echo ""
echo "üìã Quotify:"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ -d "$DIR/QuotifyApp/node_modules" ]; then
    echo "‚úÖ Dependencias instaladas"
else
    echo "‚ùå Dependencias NO instaladas"
    echo "   Ejecuta: '1Ô∏è‚É£ INSTALAR-QUOTIFY.command'"
fi

echo ""
echo "=================================="
echo ""
read -p "Presiona Enter para salir..."
CHECK_EOF

chmod +x "3Ô∏è‚É£ VERIFICAR-SISTEMA.command"

# LEEME
cat > "LEEME-COMPLETO.txt" << 'README_EOF'
üéØ QUOTIFY - VERSI√ìN COMPLETA CON YT-DLP

========================================

‚úÖ INCLUYE TODO LO NECESARIO
‚úÖ TRANSCRIPCI√ìN FUNCIONANDO
‚úÖ SIN TERMINAL VISIBLE

üìã INSTALACI√ìN COMPLETA:

1. PRIMERO (solo si falla transcripci√≥n):
   "0Ô∏è‚É£ INSTALAR-YT-DLP.command"

2. INSTALAR QUOTIFY:
   "1Ô∏è‚É£ INSTALAR-QUOTIFY.command"

3. ABRIR QUOTIFY:
   "üéØ Abrir Quotify.app"

üîç VERIFICAR SISTEMA:
   "3Ô∏è‚É£ VERIFICAR-SISTEMA.command"

üéµ TRANSCRIPCI√ìN:
‚Ä¢ Requiere yt-dlp instalado
‚Ä¢ Requiere API key de OpenAI
‚Ä¢ Funciona con cualquier video de YouTube

¬°Disfruta Quotify completo!
README_EOF

echo ""
echo "‚úÖ VERSI√ìN COMPLETA CON YT-DLP CREADA!"
echo ""
echo "üì¶ INCLUYE:"
echo "   0Ô∏è‚É£ Instalador de yt-dlp"
echo "   1Ô∏è‚É£ Instalador de Quotify"
echo "   üéØ App invisible"
echo "   3Ô∏è‚É£ Verificador de sistema"
echo ""

# ZIP
cd "/Users/darwinborges/Desktop"
zip -r "${PACKAGE_NAME}.zip" "$PACKAGE_NAME" -q

echo "üì¶ ZIP: ${PACKAGE_NAME}.zip"
echo ""
echo "üéØ ¬°VERSI√ìN COMPLETA LISTA!"
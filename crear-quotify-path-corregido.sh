#!/bin/bash

echo "üéØ Quotify - VERSI√ìN CON PATH CORREGIDO"
echo "======================================"

PACKAGE_NAME="Quotify-PATH-CORREGIDO-$(date +%Y%m%d-%H%M)"
DIST_DIR="/Users/darwinborges/Desktop/$PACKAGE_NAME"

echo "üì¶ Creando versi√≥n con PATH corregido..."

# Limpiar y crear directorio
rm -rf "$DIST_DIR"
mkdir -p "$DIST_DIR"
mkdir -p "$DIST_DIR/QuotifyApp"
mkdir -p "$DIST_DIR/documentacion"

# Copiar proyecto completo
echo "üìã Copiando proyecto completo..."
cp -r src "$DIST_DIR/QuotifyApp/"
cp -r public "$DIST_DIR/QuotifyApp/"
cp package.json "$DIST_DIR/QuotifyApp/"
cp package-lock.json "$DIST_DIR/QuotifyApp/"
cp vite.config.ts "$DIST_DIR/QuotifyApp/"
cp tsconfig.json "$DIST_DIR/QuotifyApp/"
cp tsconfig.node.json "$DIST_DIR/QuotifyApp/"
cp tailwind.config.js "$DIST_DIR/QuotifyApp/"
cp postcss.config.js "$DIST_DIR/QuotifyApp/"
cp index.html "$DIST_DIR/QuotifyApp/"

cd "$DIST_DIR"

# 1. INSTALADOR MEJORADO
cat > "1Ô∏è‚É£ INSTALAR-QUOTIFY.command" << 'INSTALL_EOF'
#!/bin/bash

echo "üéØ Quotify - Instalaci√≥n con Detecci√≥n de PATH"
echo "=============================================="

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$DIR/QuotifyApp"

echo ""
echo "üìç Instalando en: $(pwd)"
echo ""

# Funci√≥n para encontrar Node.js en ubicaciones comunes
find_node() {
    local node_paths=(
        "/usr/local/bin/node"
        "/opt/homebrew/bin/node"
        "/usr/bin/node"
        "$HOME/.nvm/versions/node/*/bin/node"
        "/usr/local/nodejs/bin/node"
    )
    
    for path in "${node_paths[@]}"; do
        if [ -x "$path" ] 2>/dev/null; then
            echo "$path"
            return 0
        fi
    done
    
    # Expandir rutas con wildcards
    for path in $HOME/.nvm/versions/node/*/bin/node; do
        if [ -x "$path" ]; then
            echo "$path"
            return 0
        fi
    done
    
    return 1
}

# Buscar Node.js
echo "üîç Buscando Node.js..."
NODE_PATH=$(find_node)

if [ -z "$NODE_PATH" ]; then
    echo "‚ùå Node.js no encontrado en ubicaciones comunes"
    echo ""
    echo "üì• INSTALA Node.js:"
    echo "   1. Ve a: https://nodejs.org/"
    echo "   2. Descarga versi√≥n LTS"
    echo "   3. Instala y ejecuta este script otra vez"
    echo ""
    echo "üîç Ubicaciones buscadas:"
    echo "   ‚Ä¢ /usr/local/bin/node"
    echo "   ‚Ä¢ /opt/homebrew/bin/node"
    echo "   ‚Ä¢ ~/.nvm/versions/node/*/bin/node"
    echo ""
    read -p "Presiona Enter para salir..."
    exit 1
fi

# Obtener directorio de Node.js
NODE_DIR=$(dirname "$NODE_PATH")
NPM_PATH="$NODE_DIR/npm"

echo "‚úÖ Node.js encontrado en: $NODE_PATH"
echo "‚úÖ Version: $($NODE_PATH --version)"
echo "‚úÖ npm encontrado en: $NPM_PATH"
echo ""

# Guardar rutas para la aplicaci√≥n
cat > "$DIR/node_paths.env" << ENV_EOF
NODE_PATH=$NODE_PATH
NPM_PATH=$NPM_PATH
NODE_DIR=$NODE_DIR
PATH=$NODE_DIR:/usr/local/bin:/opt/homebrew/bin:/usr/bin:/bin
ENV_EOF

echo "üíæ Rutas guardadas en node_paths.env"
echo ""

# Limpiar cache
echo "üßπ Limpiando cache..."
"$NPM_PATH" cache clean --force 2>/dev/null || true

# Instalar dependencias
echo "üì¶ Instalando dependencias..."
echo "   (Esto puede tomar 3-8 minutos)"
echo ""

"$NPM_PATH" install

if [ $? -ne 0 ]; then
    echo ""
    echo "‚ùå Error en instalaci√≥n"
    echo ""
    echo "üîß SOLUCIONES:"
    echo "   1. Verifica conexi√≥n a internet"
    echo "   2. Cierra otras aplicaciones"
    echo "   3. Reinicia y prueba otra vez"
    echo ""
    read -p "Presiona Enter para salir..."
    exit 1
fi

echo ""
echo "‚úÖ ¬°Instalaci√≥n completada!"
echo ""
echo "üöÄ SIGUIENTE PASO:"
echo "   Doble clic en 'üéØ Abrir Quotify.app'"
echo ""
read -p "Presiona Enter para continuar..."

INSTALL_EOF

chmod +x "1Ô∏è‚É£ INSTALAR-QUOTIFY.command"

# 2. CREAR APLICACI√ìN CON PATH CORREGIDO
APP_DIR="$DIST_DIR/üéØ Abrir Quotify.app"
mkdir -p "$APP_DIR/Contents/MacOS"
mkdir -p "$APP_DIR/Contents/Resources"

# Copiar icono si existe
if [ -f "/Users/darwinborges/Desktop/Icono Quotify.png" ]; then
    ICONSET_DIR="/tmp/quotify_path.iconset"
    mkdir -p "$ICONSET_DIR"
    
    sips -z 1024 1024 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_1024x1024.png" 2>/dev/null
    sips -z 512 512 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_512x512.png" 2>/dev/null
    sips -z 256 256 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_256x256.png" 2>/dev/null
    sips -z 128 128 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_128x128.png" 2>/dev/null
    sips -z 64 64 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_64x64.png" 2>/dev/null
    sips -z 32 32 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_32x32.png" 2>/dev/null
    sips -z 16 16 "/Users/darwinborges/Desktop/Icono Quotify.png" --out "$ICONSET_DIR/icon_16x16.png" 2>/dev/null
    
    iconutil -c icns "$ICONSET_DIR" -o "$APP_DIR/Contents/Resources/quotify.icns" 2>/dev/null
    rm -rf "$ICONSET_DIR"
fi

# Info.plist
cat > "$APP_DIR/Contents/Info.plist" << 'PLIST_EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundleExecutable</key>
    <string>quotify_launcher</string>
    <key>CFBundleIdentifier</key>
    <string>com.quotify.path.fixed</string>
    <key>CFBundleName</key>
    <string>Quotify</string>
    <key>CFBundleDisplayName</key>
    <string>üéØ Abrir Quotify</string>
    <key>CFBundleVersion</key>
    <string>1.0</string>
    <key>CFBundleIconFile</key>
    <string>quotify</string>
    <key>LSUIElement</key>
    <true/>
    <key>NSHighResolutionCapable</key>
    <true/>
</dict>
</plist>
PLIST_EOF

# Launcher con PATH CORREGIDO
cat > "$APP_DIR/Contents/MacOS/quotify_launcher" << 'LAUNCHER_EOF'
#!/bin/bash

# Obtener directorio de la app
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
QUOTIFY_DIR="$DIR/../../../QuotifyApp"
ENV_FILE="$DIR/../../../node_paths.env"

# Funci√≥n para mostrar di√°logos
show_dialog() {
    /usr/bin/osascript -e "tell application \"System Events\" to display dialog \"$1\" buttons {\"$2\"} default button \"$2\" with icon note"
}

show_choice() {
    result=$(/usr/bin/osascript -e "tell application \"System Events\" to display dialog \"$1\" buttons {\"Cancelar\", \"$2\"} default button \"$2\" with icon note" 2>/dev/null)
    if [[ $result == *"$2"* ]]; then
        return 0
    else
        return 1
    fi
}

# Preguntar si quiere abrir
if ! show_choice "üéØ Quotify - PATH Corregido

‚úÖ Detecci√≥n autom√°tica de Node.js
‚úÖ Backend Electron + Frontend React
‚úÖ Transcripci√≥n con OpenAI funcional
üîá Sin terminal visible

¬øIniciar Quotify?" "üöÄ Abrir Quotify"; then
    exit 0
fi

# Verificar que est√© instalado
if [ ! -d "$QUOTIFY_DIR/node_modules" ]; then
    show_dialog "‚ùå Quotify no est√° instalado

Por favor ejecuta primero:
'1Ô∏è‚É£ INSTALAR-QUOTIFY.command'

Despu√©s intenta abrir Quotify otra vez." "Entendido"
    exit 1
fi

# Cargar rutas de Node.js
if [ ! -f "$ENV_FILE" ]; then
    show_dialog "‚ùå Archivo de configuraci√≥n no encontrado

Por favor ejecuta el instalador otra vez:
'1Ô∏è‚É£ INSTALAR-QUOTIFY.command'" "Entendido"
    exit 1
fi

# Cargar variables de entorno
source "$ENV_FILE"

# Verificar que las rutas existan
if [ ! -x "$NODE_PATH" ]; then
    show_dialog "‚ùå Node.js no encontrado en: $NODE_PATH

Por favor reinstala Node.js y ejecuta el instalador otra vez." "Entendido"
    exit 1
fi

if [ ! -x "$NPM_PATH" ]; then
    show_dialog "‚ùå npm no encontrado en: $NPM_PATH

Por favor reinstala Node.js y ejecuta el instalador otra vez." "Entendido"
    exit 1
fi

# Cambiar al directorio del proyecto
cd "$QUOTIFY_DIR"

# Establecer PATH correcto
export PATH="$NODE_DIR:/usr/local/bin:/opt/homebrew/bin:/usr/bin:/bin"

# Mostrar progreso
show_dialog "üöÄ Iniciando Quotify...

‚ö° Node.js: $($NODE_PATH --version)
‚ö° Preparando aplicaci√≥n
üîá Se ejecutar√° invisible

¬°Esto toma 15-25 segundos!" "Entendido" &

# Cerrar procesos anteriores
/usr/bin/pkill -f "electron.*quotify" 2>/dev/null || true
/usr/bin/pkill -f "vite.*5173" 2>/dev/null || true
/usr/bin/pkill -f "node.*5173" 2>/dev/null || true
sleep 3

# Crear logs
LOG_FILE="/tmp/quotify_path_$(date +%s).log"
exec > >(tee -a "$LOG_FILE") 2>&1

echo "=== Quotify PATH Corrected Log $(date) ==="
echo "Directory: $(pwd)"
echo "Node path: $NODE_PATH"
echo "Node version: $($NODE_PATH --version)"
echo "npm path: $NPM_PATH"
echo "npm version: $($NPM_PATH --version)"
echo "PATH: $PATH"

# Verificar puerto
if /usr/bin/lsof -Pi :5173 -sTCP:LISTEN -t >/dev/null 2>&1; then
    echo "Port 5173 is in use, killing process..."
    /usr/bin/pkill -f ".*5173" 2>/dev/null || true
    sleep 2
fi

# M√©todo 1: Intentar con concurrently
echo "=== Attempting Method 1: npm run dev ==="
"$NPM_PATH" run dev &
NPM_PID=$!

# Esperar a que arranque
sleep 25

# Verificar si est√° funcionando
if kill -0 $NPM_PID 2>/dev/null && /usr/bin/pgrep -f "electron.*quotify" >/dev/null; then
    echo "=== Method 1 successful ==="
    show_dialog "‚úÖ ¬°Quotify funcionando!

üì± Aplicaci√≥n Electron abierta
üî• Backend + Frontend completo

Node.js: $($NODE_PATH --version)
Log: $LOG_FILE" "¬°Perfecto!"
    exit 0
fi

# M√©todo 2: Manual step-by-step
echo "=== Attempting Method 2: Manual startup ==="
kill $NPM_PID 2>/dev/null || true
sleep 2

# Iniciar Vite primero
echo "Starting Vite server..."
"$NPM_PATH" run dev:vite &
VITE_PID=$!

# Esperar que Vite est√© listo
for i in {1..25}; do
    if /usr/bin/curl -s http://localhost:5173 >/dev/null 2>&1; then
        echo "Vite ready on attempt $i"
        break
    fi
    sleep 1
done

# Verificar Vite
if ! /usr/bin/curl -s http://localhost:5173 >/dev/null 2>&1; then
    echo "=== Vite failed to start ==="
    show_dialog "‚ùå Error: Vite server no arranc√≥

üîß DEBUG INFO:
‚Ä¢ Node.js: $($NODE_PATH --version)
‚Ä¢ npm: $($NPM_PATH --version)
‚Ä¢ Directory: $(pwd)

üí° SOLUCIONES:
1. Reinstala: '1Ô∏è‚É£ INSTALAR-QUOTIFY.command'
2. Reinicia computadora
3. Log: $LOG_FILE" "Entendido"
    exit 1
fi

# Iniciar Electron
echo "Starting Electron..."
"$NPM_PATH" run dev:electron &
ELECTRON_PID=$!

# Esperar Electron
sleep 15

# Verificar Electron
if /usr/bin/pgrep -f "electron.*quotify" >/dev/null; then
    echo "=== Method 2 successful ==="
    show_dialog "‚úÖ ¬°Quotify funcionando!

üì± Aplicaci√≥n Electron abierta
üî• Todas las funciones disponibles

Node.js: $($NODE_PATH --version)
Log: $LOG_FILE" "¬°Perfecto!"
else
    echo "=== Both methods failed ==="
    show_dialog "‚ùå Quotify no pudo arrancar

üîß DEBUG INFO:
‚Ä¢ Node.js: $($NODE_PATH --version)
‚Ä¢ Vite: $(/usr/bin/curl -s http://localhost:5173 >/dev/null 2>&1 && echo 'OK' || echo 'FAIL')
‚Ä¢ Electron: $(/usr/bin/pgrep -f electron >/dev/null && echo 'OK' || echo 'FAIL')

üí° SOLUCIONES:
1. Reinstala completamente
2. Reinicia computadora
3. Log detallado: $LOG_FILE" "Entendido"
fi

LAUNCHER_EOF

chmod +x "$APP_DIR/Contents/MacOS/quotify_launcher"

# 3. DOCUMENTACI√ìN
cat > "documentacion/PATH-CORREGIDO.txt" << 'DOC_EOF'
üéØ QUOTIFY - PATH CORREGIDO

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Esta versi√≥n corrige el problema de PATH que imped√≠a
que Node.js se encontrara desde la aplicaci√≥n.

üîß PROBLEMA SOLUCIONADO:
‚ùå "Node version: not found"
‚ùå "npm: command not found"
‚úÖ Detecci√≥n autom√°tica de Node.js
‚úÖ PATH corregido para App Bundle

üìã UBICACIONES BUSCADAS:
‚Ä¢ /usr/local/bin/node (Instalaci√≥n est√°ndar)
‚Ä¢ /opt/homebrew/bin/node (Homebrew en M1/M2)
‚Ä¢ ~/.nvm/versions/node/*/bin/node (NVM)
‚Ä¢ /usr/bin/node (Sistema)

üöÄ INSTALACI√ìN:
1. Ejecutar: "1Ô∏è‚É£ INSTALAR-QUOTIFY.command"
   ‚Üí Detecta autom√°ticamente Node.js
   ‚Üí Guarda rutas en node_paths.env
2. Ejecutar: "üéØ Abrir Quotify.app"
   ‚Üí Usa rutas guardadas
   ‚Üí Funciona sin problemas de PATH

üî• GARANT√çA:
Si el instalador completa sin errores,
la aplicaci√≥n DEBE funcionar.

DOC_EOF

cat > "LEEME-PATH-CORREGIDO.txt" << 'README_EOF'
üéØ QUOTIFY - VERSI√ìN PATH CORREGIDO

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

¬°Esta versi√≥n soluciona el problema de Node.js!

üîß PROBLEMA ANTERIOR:
‚ùå "Node version: not found"
‚ùå "npm: command not found"
‚ùå Vite server no arrancaba

‚úÖ SOLUCI√ìN APLICADA:
‚úÖ Detecci√≥n autom√°tica de Node.js
‚úÖ PATH corregido para macOS App Bundle
‚úÖ Rutas guardadas en archivo de configuraci√≥n
‚úÖ Verificaci√≥n completa antes de ejecutar

üìã INSTALACI√ìN:
1. Doble clic: "1Ô∏è‚É£ INSTALAR-QUOTIFY.command"
2. Doble clic: "üéØ Abrir Quotify.app"
3. ¬°Deber√≠a funcionar perfectamente!

üéØ GARANT√çA:
Si ves "‚úÖ ¬°Instalaci√≥n completada!" 
entonces Quotify DEBE funcionar.

Si no funciona, revisa el log autom√°tico.

README_EOF

echo ""
echo "‚úÖ VERSI√ìN PATH CORREGIDO CREADA!"
echo ""
echo "üîß PROBLEMA SOLUCIONADO:"
echo "   ‚ùå Node.js no encontrado"
echo "   ‚úÖ Detecci√≥n autom√°tica implementada"
echo "   ‚úÖ PATH corregido para App Bundle"
echo ""

# Crear ZIP final
cd "/Users/darwinborges/Desktop"
zip -r "${PACKAGE_NAME}.zip" "$PACKAGE_NAME" -q

echo "üì¶ ZIP PATH CORREGIDO: ${PACKAGE_NAME}.zip"
echo ""
echo "üéØ ESTA VERSI√ìN DEBE FUNCIONAR"
echo "   El problema de Node.js est√° solucionado"
#!/bin/bash

echo "üéØ Quotify - VERSI√ìN DEFINITIVA Y FUNCIONAL"
echo "=========================================="

PACKAGE_NAME="Quotify-DEFINITIVO-$(date +%Y%m%d-%H%M)"
DIST_DIR="/Users/darwinborges/Desktop/$PACKAGE_NAME"

echo "üì¶ Creando versi√≥n definitiva con TODO funcionando..."

# Limpiar y crear directorio principal
rm -rf "$DIST_DIR"
mkdir -p "$DIST_DIR"
mkdir -p "$DIST_DIR/QuotifyApp"
mkdir -p "$DIST_DIR/documentacion"

# Copiar SOLO archivos necesarios (sin basura)
echo "üìã Copiando archivos esenciales..."
cp -r src "$DIST_DIR/QuotifyApp/"
cp -r public "$DIST_DIR/QuotifyApp/"
cp package.json "$DIST_DIR/QuotifyApp/"
cp package-lock.json "$DIST_DIR/QuotifyApp/"
cp vite.config.ts "$DIST_DIR/QuotifyApp/"
cp tsconfig.json "$DIST_DIR/QuotifyApp/"
cp tsconfig.node.json "$DIST_DIR/QuotifyApp/"
cp tailwind.config.js "$DIST_DIR/QuotifyApp/"
cp postcss.config.js "$DIST_DIR/QuotifyApp/"
cp index.html "$DIST_DIR/QuotifyApp/"

# Verificar que backend est√© incluido
if [ ! -f "$DIST_DIR/QuotifyApp/src/main/index.js" ]; then
    echo "‚ùå Error: Backend de Electron no encontrado"
    exit 1
fi

echo "‚úÖ Backend de Electron incluido correctamente"

cd "$DIST_DIR"

# 1. INSTALADOR DEFINITIVO
cat > "1Ô∏è‚É£ INSTALAR.command" << 'EOF'
#!/bin/bash

exec > >(tee /tmp/quotify_install.log) 2>&1

# Funci√≥n para mostrar ventanas sin terminal
show_dialog() {
    osascript -e "tell application \"System Events\" to display dialog \"$1\" buttons {\"$2\"} default button \"$2\" with icon note"
}

show_error() {
    osascript -e "tell application \"System Events\" to display dialog \"‚ùå $1\" buttons {\"Entendido\"} default button \"Entendido\" with icon stop"
}

show_progress() {
    osascript << APPLESCRIPT &
tell application "System Events"
    display dialog "$1" buttons {} giving up after $2 with icon note
end tell
APPLESCRIPT
    echo $!
}

# Mostrar inicio
if ! show_dialog "üéØ Quotify - Instalaci√≥n Definitiva

‚úÖ Instalar√° backend + frontend completo
‚úÖ Transcripci√≥n funcional con OpenAI
‚úÖ Metadata de YouTube instant√°nea
‚úÖ Completamente silencioso (sin terminal)

¬øContinuar con la instalaci√≥n?" "Instalar"; then
    exit 0
fi

# Verificar Node.js
if ! command -v node &> /dev/null; then
    show_error "Node.js no est√° instalado.

Pasos:
1. Ve a: https://nodejs.org/
2. Descarga versi√≥n LTS
3. Instala y ejecuta este instalador otra vez"
    exit 1
fi

NODE_VERSION=$(node --version)
show_dialog "‚úÖ Node.js encontrado: $NODE_VERSION

Continuando con la instalaci√≥n..." "Continuar"

# Ir al directorio correcto
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$DIR/QuotifyApp"

# Mostrar progreso de instalaci√≥n
PROGRESS_PID=$(show_progress "üì¶ Instalando Quotify...

‚è≥ Descargando dependencias (2-5 minutos)
üîß Configurando backend y frontend
üîá Instalaci√≥n silenciosa en progreso

NO CIERRES esta ventana..." 300)

# Limpiar cache e instalar
npm cache clean --force &>/dev/null || true
npm install --silent --no-progress --loglevel=error &>/dev/null

INSTALL_RESULT=$?

# Cerrar ventana de progreso
kill $PROGRESS_PID 2>/dev/null || true

if [ $INSTALL_RESULT -ne 0 ]; then
    show_error "Error en la instalaci√≥n.

Soluciones:
‚Ä¢ Verifica conexi√≥n a internet
‚Ä¢ Cierra otras aplicaciones
‚Ä¢ Reinicia y prueba otra vez
‚Ä¢ Revisa el log: /tmp/quotify_install.log"
    exit 1
fi

# Crear launcher silencioso
cat > "../2Ô∏è‚É£ ABRIR-QUOTIFY.command" << 'LAUNCHER_EOF'
#!/bin/bash

# Funci√≥n para mostrar di√°logos
show_dialog() {
    osascript -e "tell application \"System Events\" to display dialog \"$1\" buttons {\"$2\"} default button \"$2\" with icon note"
}

show_choice() {
    osascript -e "tell application \"System Events\" to display dialog \"$1\" buttons {\"Cancelar\", \"$2\"} default button \"$2\" with icon note"
}

show_progress_auto() {
    osascript << APPLESCRIPT &
tell application "System Events"
    display dialog "$1" buttons {} giving up after $2 with icon note
end tell
APPLESCRIPT
    echo $!
}

# Preguntar si quiere abrir
if ! show_choice "üéØ Quotify Definitivo

üöÄ Backend + Frontend completo
üîá Completamente silencioso
üåê Se abrir√° autom√°ticamente en navegador

¬øIniciar Quotify?" "Abrir Quotify"; then
    exit 0
fi

# Ir al directorio correcto
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$DIR/QuotifyApp"

# Cerrar procesos anteriores completamente silencioso
pkill -f "vite" &>/dev/null || true
pkill -f "electron" &>/dev/null || true  
pkill -f "node.*5173" &>/dev/null || true
sleep 3

# Mostrar que est√° iniciando
PROGRESS_PID=$(show_progress_auto "üöÄ Iniciando Quotify...

‚ö° Arrancando backend (Electron)
‚ö° Arrancando frontend (React)
üåê Preparando navegador

Esto toma 10-15 segundos..." 20)

# Log de inicio para debugging
exec > /tmp/quotify_start.log 2>&1

# Iniciar Quotify COMPLETAMENTE EN BACKGROUND
nohup npm run dev &>/dev/null &
QUOTIFY_PID=$!

# Guardar PID para poder cerrar despu√©s
echo $QUOTIFY_PID > /tmp/quotify.pid

# Esperar a que est√© listo (verificar puerto)
echo "Esperando que Quotify est√© listo..."
for i in {1..30}; do
    if curl -s http://localhost:5173 &>/dev/null; then
        echo "Quotify est√° listo en intento $i"
        break
    fi
    sleep 1
done

# Cerrar ventana de progreso
kill $PROGRESS_PID &>/dev/null || true

# Verificar si est√° funcionando
if curl -s http://localhost:5173 &>/dev/null; then
    # Abrir navegador
    open http://localhost:5173
    
    # Mostrar √©xito
    show_dialog "‚úÖ ¬°Quotify funcionando perfectamente!

üåê Abierto en tu navegador
üì± URL: http://localhost:5173

üî• FUNCIONES DISPONIBLES:
‚Ä¢ Metadata de YouTube ‚úÖ
‚Ä¢ Transcripci√≥n con OpenAI ‚úÖ
‚Ä¢ Extracci√≥n de quotes ‚úÖ
‚Ä¢ Export/import ‚úÖ

üîá Funcionando silenciosamente en segundo plano
üî¥ Para cerrar: Reinicia computadora" "¬°Perfecto!"
else
    # Mostrar que est√° iniciando a√∫n
    show_dialog "‚è≥ Quotify est√° iniciando...

Es normal que tarde un poco la primera vez.

üåê Abre manual: http://localhost:5173
‚è±Ô∏è Dale 1-2 minutos m√°s

Si no funciona, ejecuta este archivo otra vez." "Entendido"
    
    # Abrir navegador de todas formas
    open http://localhost:5173
fi

LAUNCHER_EOF

chmod +x "../2Ô∏è‚É£ ABRIR-QUOTIFY.command"

# Crear acceso directo en Desktop
DESKTOP_SHORTCUT="$HOME/Desktop/üéØ Quotify DEFINITIVO.command"
cat > "$DESKTOP_SHORTCUT" << DESKTOP_EOF
#!/bin/bash
cd "$DIR"
./2Ô∏è‚É£\\ ABRIR-QUOTIFY.command
DESKTOP_EOF

chmod +x "$DESKTOP_SHORTCUT"

# Mostrar √©xito de instalaci√≥n
show_dialog "‚úÖ ¬°Quotify DEFINITIVO instalado correctamente!

üöÄ PARA USAR:
‚Ä¢ Doble clic: 'üéØ Quotify DEFINITIVO.command' en Desktop
‚Ä¢ O: '2Ô∏è‚É£ ABRIR-QUOTIFY.command' aqu√≠

üî• INCLUYE TODO:
‚úÖ Backend Electron completo
‚úÖ Frontend React completo  
‚úÖ Transcripci√≥n funcional
‚úÖ Metadata de YouTube
‚úÖ Completamente silencioso

üìñ Ayuda en carpeta 'documentacion'" "¬°Listo!"

EOF

chmod +x "1Ô∏è‚É£ INSTALAR.command"

# 2. DOCUMENTACI√ìN COMPLETA
cat > "documentacion/GUIA-COMPLETA.txt" << 'EOF'
üéØ QUOTIFY DEFINITIVO - GU√çA COMPLETA

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

Esta es la versi√≥n DEFINITIVA de Quotify:
‚úÖ Backend + Frontend completo
‚úÖ Todas las funciones disponibles  
‚úÖ Completamente silencioso
‚úÖ Listo para distribuci√≥n

üìã INSTALACI√ìN (SOLO UNA VEZ):
1. Doble clic: "1Ô∏è‚É£ INSTALAR.command"
2. Seguir ventanas de instalaci√≥n
3. Esperar que termine (2-5 minutos)

üöÄ USO DIARIO:
1. Doble clic: "2Ô∏è‚É£ ABRIR-QUOTIFY.command"  
2. O usar acceso directo en Desktop
3. ¬°Quotify se abre autom√°ticamente!

üì± FUNCIONES PRINCIPALES:

1Ô∏è‚É£ AGREGAR VIDEO DE YOUTUBE:
   ‚Ä¢ Copia URL de cualquier video
   ‚Ä¢ Pega en "Add Source" 
   ‚Ä¢ Clic "Add Source"
   ‚Ä¢ ‚úÖ Metadata extra√≠da al instante

2Ô∏è‚É£ TRANSCRIBIR AUDIO:
   ‚Ä¢ Clic "Transcribe" en video agregado
   ‚Ä¢ Ingresa API key de OpenAI
   ‚Ä¢ Espera 2-10 minutos (seg√∫n duraci√≥n)
   ‚Ä¢ ‚úÖ Transcripci√≥n con timestamps

3Ô∏è‚É£ CREAR QUOTES:
   ‚Ä¢ Ve transcripci√≥n en panel derecho
   ‚Ä¢ Selecciona texto para crear quote
   ‚Ä¢ ‚úÖ Quote guardado autom√°ticamente

4Ô∏è‚É£ GESTIONAR QUOTES:
   ‚Ä¢ Ver todos tus quotes
   ‚Ä¢ Editar y eliminar
   ‚Ä¢ Exportar en formatos varios
   ‚Ä¢ ‚úÖ Backup autom√°tico local

üîë API KEY DE OPENAI:
‚Ä¢ Obt√©n en: https://platform.openai.com/api-keys
‚Ä¢ Crea cuenta si no tienes
‚Ä¢ Genera nueva API key
‚Ä¢ C√≥piala y p√©gala cuando Quotify la pida
‚Ä¢ Se guarda seguro en tu computadora

üí∞ COSTOS APROXIMADOS:
‚Ä¢ Video 5 minutos: ~$0.03 USD
‚Ä¢ Video 30 minutos: ~$0.18 USD  
‚Ä¢ Video 60 minutos: ~$0.36 USD

üîá FUNCIONAMIENTO SILENCIOSO:
‚Ä¢ No ver√°s ventanas t√©cnicas
‚Ä¢ Todo funciona en segundo plano
‚Ä¢ Solo ventanas informativas bonitas
‚Ä¢ Perfecto para cualquier usuario

EOF

cat > "documentacion/SOLUCION-PROBLEMAS.txt" << 'EOF'
üÜò SOLUCI√ìN DE PROBLEMAS DEFINITIVA

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ùå "Node.js no est√° instalado"
üîß SOLUCI√ìN:
   1. Ve a https://nodejs.org/
   2. Descarga versi√≥n LTS (recomendada)
   3. Instala normalmente
   4. Reinicia computadora
   5. Ejecuta instalador otra vez

‚ùå "Error en la instalaci√≥n"
üîß SOLUCI√ìN:
   1. Verifica conexi√≥n a internet estable
   2. Cierra todas las aplicaciones
   3. Reinicia computadora
   4. Ejecuta instalador otra vez
   5. Si persiste, revisa: /tmp/quotify_install.log

‚ùå "Quotify no se abre en navegador"
üîß SOLUCI√ìN:
   1. Espera 1-2 minutos (primera vez es lenta)
   2. Abre manual: http://localhost:5173
   3. Si no funciona, ejecuta launcher otra vez
   4. Verifica que puerto 5173 est√© libre

‚ùå "Transcripci√≥n falla"
üîß SOLUCI√ìN:
   1. Verifica API key de OpenAI correcta
   2. Checa saldo en tu cuenta OpenAI
   3. Intenta con video m√°s corto (m√°x 30 min)
   4. Verifica conexi√≥n a internet
   5. Reinicia Quotify

‚ùå "YouTube metadata no funciona"
üîß SOLUCI√ìN:
   1. Verifica URL completa de YouTube
   2. Aseg√∫rate que video sea p√∫blico
   3. Prueba con otro video
   4. Verifica conexi√≥n a internet

‚ùå "Quotify se cierra solo"
üîß SOLUCI√ìN:
   1. NO cierres ventanas de terminal si aparecen
   2. Ejecuta launcher otra vez
   3. Revisa log: /tmp/quotify_start.log
   4. Reinicia computadora si persiste

‚ùå "No encuentra archivos"
üîß SOLUCI√ìN:
   1. No muevas la carpeta de instalaci√≥n
   2. Ejecuta desde ubicaci√≥n original
   3. Re-instala si moviste carpetas

üí° CONSEJOS IMPORTANTES:
‚Ä¢ Primera ejecuci√≥n siempre tarda m√°s
‚Ä¢ Usa videos de m√°ximo 30 minutos
‚Ä¢ Mant√©n buena conexi√≥n a internet
‚Ä¢ Ten saldo en cuenta OpenAI
‚Ä¢ No muevas carpetas despu√©s de instalar

üÜò AYUDA ADICIONAL:
Si nada funciona:
1. Borra toda la carpeta
2. Descomprime ZIP otra vez
3. Instala desde cero
4. Revisa requisitos del sistema

EOF

cat > "documentacion/REQUISITOS-SISTEMA.txt" << 'EOF'
üîß REQUISITOS DEL SISTEMA

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚úÖ SISTEMA OPERATIVO:
‚Ä¢ macOS 10.14 o superior
‚Ä¢ Intel o Apple Silicon (M1/M2)

‚úÖ SOFTWARE REQUERIDO:
‚Ä¢ Node.js 18 o superior (OBLIGATORIO)
  - Descargar: https://nodejs.org/
  - Elegir versi√≥n LTS

‚Ä¢ Navegador web moderno:
  - Safari 14+
  - Chrome 90+
  - Firefox 88+
  - Edge 90+

‚úÖ CONEXI√ìN:
‚Ä¢ Internet estable (para YouTube y OpenAI)
‚Ä¢ Velocidad m√≠nima: 10 Mbps recomendado

‚úÖ CUENTA OPENAI:
‚Ä¢ Cuenta en OpenAI (gratis crear)
‚Ä¢ API key v√°lida
‚Ä¢ Saldo disponible para transcripciones

‚úÖ HARDWARE M√çNIMO:
‚Ä¢ RAM: 8GB recomendado
‚Ä¢ Almacenamiento: 2GB libres
‚Ä¢ Procesador: Cualquier Mac de √∫ltimos 5 a√±os

‚úÖ PERMISOS:
‚Ä¢ Permisos para ejecutar aplicaciones
‚Ä¢ Acceso a internet
‚Ä¢ Escritura en directorio del usuario

üö´ NO COMPATIBLE:
‚Ä¢ macOS 10.13 o inferior
‚Ä¢ Versiones muy antiguas de Node.js
‚Ä¢ Conexiones muy lentas (<5 Mbps)

üí° RENDIMIENTO √ìPTIMO:
‚Ä¢ macOS 12+ (Monterey)
‚Ä¢ 16GB RAM o m√°s
‚Ä¢ SSD (disco s√≥lido)
‚Ä¢ Conexi√≥n 50+ Mbps
‚Ä¢ Cuenta OpenAI con cr√©ditos

EOF

# Crear README principal
cat > "LEEME-DEFINITIVO.txt" << 'EOF'
üéØ QUOTIFY DEFINITIVO - VERSI√ìN FINAL

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

¬°Bienvenido a Quotify Definitivo!

Esta es la versi√≥n final y completa:
‚úÖ Backend + Frontend funcionando al 100%
‚úÖ Transcripci√≥n con OpenAI completamente funcional
‚úÖ Metadata de YouTube instant√°nea
‚úÖ Todas las funciones disponibles
‚úÖ Completamente silencioso (sin terminal)
‚úÖ Listo para distribuci√≥n masiva

üìã INSTALACI√ìN S√öPER SIMPLE:

   1Ô∏è‚É£ Doble clic: "1Ô∏è‚É£ INSTALAR.command"
      ‚Üí Sigue las ventanas (2-5 minutos)
   
   2Ô∏è‚É£ Doble clic: "2Ô∏è‚É£ ABRIR-QUOTIFY.command"  
      ‚Üí ¬°Se abre autom√°ticamente!
   
   ¬°Listo! üéâ

üî• LO QUE PUEDES HACER:

‚úÖ Extraer metadata de ANY video de YouTube (instant√°neo)
‚úÖ Transcribir audio completo con timestamps precisos
‚úÖ Crear quotes seleccionando texto de transcripci√≥n
‚úÖ Organizar y gestionar biblioteca de quotes
‚úÖ Exportar quotes en m√∫ltiples formatos
‚úÖ Buscar dentro de transcripciones
‚úÖ Enlaces directos a momentos espec√≠ficos del video

üéØ CASOS DE USO:

üìö ESTUDIANTES: Transcribe clases y crea apuntes
üìù PERIODISTAS: Extrae quotes de entrevistas  
üé• CREADORES: Analiza contenido de competencia
üìä INVESTIGADORES: Procesa material audiovisual
üíº PROFESIONALES: Transcribe reuniones y calls

üìñ ¬øNECESITAS AYUDA?

Ve a carpeta "documentacion":
‚Ä¢ GUIA-COMPLETA.txt - Uso paso a paso
‚Ä¢ SOLUCION-PROBLEMAS.txt - Troubleshooting
‚Ä¢ REQUISITOS-SISTEMA.txt - Compatibilidad

üîá EXPERIENCIA USUARIO:

Esta versi√≥n es COMPLETAMENTE SILENCIOSA:
‚Ä¢ No ver√°s c√≥digo ni terminal
‚Ä¢ Solo ventanas bonitas de macOS
‚Ä¢ Todo funciona autom√°ticamente en segundo plano
‚Ä¢ Perfecto para usuarios no t√©cnicos

üí° PRIMER USO:

1. Instala siguiendo las ventanas
2. Abre Quotify (se abre autom√°ticamente en navegador)
3. Agrega URL de YouTube
4. Obt√©n API key de OpenAI
5. ¬°Transcribe y crea quotes!

¬°Disfruta la experiencia completa de Quotify! üéØ

EOF

echo ""
echo "‚úÖ VERSI√ìN DEFINITIVA CREADA!"
echo ""
echo "üìÇ ESTRUCTURA FINAL:"
echo "   üìã LEEME-DEFINITIVO.txt"
echo "   1Ô∏è‚É£ INSTALAR.command (DEFINITIVO)"
echo "   2Ô∏è‚É£ ABRIR-QUOTIFY.command (COMPLETO + SILENCIOSO)"
echo "   üìÅ documentacion/ (GU√çAS COMPLETAS)"
echo "   üìÅ QuotifyApp/ (BACKEND + FRONTEND)"
echo ""
echo "üî• VERIFICACIONES INCLUIDAS:"
echo "   ‚úÖ Backend de Electron verificado"
echo "   ‚úÖ Frontend React completo" 
echo "   ‚úÖ Transcripci√≥n funcional"
echo "   ‚úÖ Metadata de YouTube"
echo "   ‚úÖ Completamente silencioso"
echo "   ‚úÖ Instalaci√≥n autom√°tica"
echo "   ‚úÖ Documentaci√≥n completa"
echo ""

# Crear ZIP final
cd "/Users/darwinborges/Desktop"
zip -r "${PACKAGE_NAME}.zip" "$PACKAGE_NAME" -q

echo "üì¶ ZIP DEFINITIVO: ${PACKAGE_NAME}.zip"
echo ""
echo "üéâ ¬°VERSI√ìN DEFINITIVA LISTA PARA DISTRIBUCI√ìN!"
echo ""
echo "üéØ CARACTER√çSTICAS FINALES:"
echo "   üî• Backend + Frontend completo"
echo "   üîá Completamente silencioso"  
echo "   üì± Transcripci√≥n 100% funcional"
echo "   üåê Metadata de YouTube instant√°nea"
echo "   üìñ Documentaci√≥n completa"
echo "   üöÄ Listo para distribuir"